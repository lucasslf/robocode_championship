# EventMobi Engineering
# Docker compose for local development
# version: 2021.01.15

# by default docker-compose assumes it is in your parent directory of your projects
# by default docker-compose assumes you have all the projects repositories locally.
# Please make sure to create .env from env.example before starting docker-compose


version: "3.9"

services:
    zookeeper:
        container_name: robot-championship-zookeeper
        image: wurstmeister/zookeeper
        ports:
            - "2181:2181"

    kafka:
        container_name: robot-championship-kafka
        image: wurstmeister/kafka
        ports:
            - "9092:9092"
        environment:
            KAFKA_ADVERTISED_HOST_NAME: robot-championship-kafka
            KAFKA_ZOOKEEPER_CONNECT: robot-championship-zookeeper:2181
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock

    database:
        image: mysql:5.7
        container_name: robot-service-db
        restart: always
        ports:
            - 3306:3306
        environment:
            - MYSQL_ROOT_PASSWORD
            - MYSQL_DATABASE
            - MYSQL_USER
            - MYSQL_PASSWORD
        volumes:
            - ./robot-service/db/entrypoint:/docker-entrypoint-initdb.d
            - ./robot-service/db/data:/var/lib/mysql

    battle-service-mongo:
        container_name: battle-service-mongo
        image: mongo
        ports:
            - "27017:27017"

    robot-service:
        image: lucasslf/robot-service:latest
        restart: on-failure
        build:
            context: ./robot-service/
            dockerfile: Dockerfile
        container_name: robot-service
        volumes:
            # update changes on container
            - ./robot-service/:/code
        ports:
            - "8080:8080"
        depends_on:
            - database
            - zookeeper
            - kafka

    championship-service:
        image: lucasslf/championship-service:latest
        build:
            context: ./championship-service/
            dockerfile: Dockerfile
        container_name: championship-service
        restart: on-failure
        volumes:
            # update changes on container
            - ./championship-service/:/code
        ports:
            - "8081:8081"
        depends_on:
            - zookeeper
            - kafka

    battle-service:
        image: lucasslf/battle-service:latest

        volumes:
            - ./battle-service/robots/:/robots
            - ./battle-service/lib/:/robocode_libs
        build:
            context: ./battle-service/
            dockerfile: Dockerfile
        container_name: battle-service
        depends_on:
            - zookeeper
            - kafka
            - battle-service-mongo